// Manifest version information!
def versionMajor = 1
def versionMinor = 0
def versionPatch = 1
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'com.squareup.sqldelight'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
  namespace 'com.nightlynexus.bataway'

  compileSdkVersion versions.compileSdk

  defaultConfig {
    applicationId namespace

    minSdkVersion 26
    targetSdkVersion 34

    versionCode versionMajor * 1000000 + versionMinor * 10000 + versionPatch * 100 + versionBuild
    versionName "$versionMajor.$versionMinor.$versionPatch"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = '1.8'
  }

  lint {
    abortOnError true
    warningsAsErrors true
    lintConfig rootProject.file('lint.xml')
    textReport true
    htmlReport true
    htmlOutput rootProject.file("lint-reports/${name}.html")
    // We run a full lint analysis as build part in CI, so skip vital checks for assemble tasks.
    checkReleaseBuilds false
  }

  buildTypes {
  }

  productFlavors {
    flavorDimensions = ['environment']

    internal {
      applicationIdSuffix '.internal'
      dimension 'environment'
    }

    production {
      dimension 'environment'
    }
  }
}

sqldelight {
  Database {
    packageName = 'com.nightlynexus.bataway'
  }
}

repositories {
  google()
}

dependencies {
  implementation deps.kotlin.stdlibJdk8
  implementation deps.kotlin.coroutines
  implementation deps.kotlin.coroutinesAndroid
  implementation deps.sqldelight.androidDriver
  implementation deps.sqldelight.androidPagingExtensions
  implementation deps.androidx.paging
  implementation deps.androidx.annotations
  implementation deps.androidx.appcompat
  implementation deps.androidx.recyclerview
  implementation deps.dagger.runtime
  kapt deps.dagger.compiler
  implementation deps.daggerAndroid.runtime
  kapt deps.daggerAndroid.compiler

  internalImplementation deps.diskcrashreporter
  internalImplementation deps.leakcanary

  testImplementation deps.junit
  testImplementation deps.truth
}
