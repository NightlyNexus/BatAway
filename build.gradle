buildscript {
  ext.versions = [
      androidGradlePlugin: '8.11.0',
      androidx: [
          activity: '1.10.1',
          annotations: '1.9.1',
          appcompat: '1.7.1',
          collection: '1.5.0',
          coordinatorlayout: '1.3.0',
          core: '1.16.0',
          drawerlayout: '1.2.0',
          fragment: '1.8.8',
          lifecycle: '2.9.1',
          paging: '2.1.2',
          preference: '1.2.1',
          recyclerview: '1.4.0',
          recyclerviewSelection: '1.1.0',
          savedstate: '1.3.0'
      ],
      billing: '7.1.1',
      compileSdk: 36,
      coroutines: '1.10.2',
      dagger: '2.56.2',
      demomode: '0.8.1',
      diskcrashreporter: '0.2.5',
      junit: '4.13.2',
      kotlin: '2.2.0',
      leakcanary: '2.14',
      material: '1.12.0',
      moshi: '1.15.2',
      okhttp: '5.0.0',
      okio: '3.15.0',
      retrofit: '3.0.0',
      retrofitLogging: '0.12.0',
      sqldelight: '1.5.5',
      truth: '1.4.4'
  ]

  ext.deps = [
      androidx: [
          activity: "androidx.activity:activity-ktx:$versions.androidx.activity",
          annotations: "androidx.annotation:annotation:$versions.androidx.annotations",
          appcompat: "androidx.appcompat:appcompat:$versions.androidx.appcompat",
          collection: "androidx.collection:collection-ktx:$versions.androidx.collection",
          coordinatorlayout: "androidx.coordinatorlayout:coordinatorlayout:$versions.androidx.coordinatorlayout",
          core: "androidx.core:core-ktx:$versions.androidx.core",
          drawerlayout: "androidx.drawerlayout:drawerlayout:$versions.androidx.drawerlayout",
          fragment: "androidx.fragment:fragment:$versions.androidx.fragment",
          lifecycleLivedataCore: "androidx.lifecycle:lifecycle-livedata-core-ktx:$versions.androidx.lifecycle",
          lifecycleRuntime: "androidx.lifecycle:lifecycle-runtime-ktx:$versions.androidx.lifecycle",
          lifecycleViewmodel: "androidx.lifecycle:lifecycle-viewmodel:$versions.androidx.lifecycle",
          paging: "androidx.paging:paging-runtime:$versions.androidx.paging",
          preference: "androidx.preference:preference-ktx:$versions.androidx.preference",
          recyclerview: "androidx.recyclerview:recyclerview:$versions.androidx.recyclerview",
          recyclerviewSelection: "androidx.recyclerview:recyclerview-selection:$versions.androidx.recyclerviewSelection",
          savedstate: "androidx.savedstate:savedstate-ktx:$versions.androidx.savedstate"
      ],
      androidGradlePlugin: "com.android.tools.build:gradle:$versions.androidGradlePlugin",
      billing: "com.android.billingclient:billing-ktx:$versions.billing",
      dagger: [
          compiler: "com.google.dagger:dagger-compiler:$versions.dagger",
          runtime: "com.google.dagger:dagger:$versions.dagger"
      ],
      daggerAndroid: [
          compiler: "com.google.dagger:dagger-android-processor:$versions.dagger",
          runtime: "com.google.dagger:dagger-android:$versions.dagger"
      ],
      demomode: "com.nightlynexus.demomode:demomode:$versions.demomode",
      diskcrashreporter: "com.nightlynexus.diskcrashreporter:diskcrashreporter:$versions.diskcrashreporter",
      junit: "junit:junit:$versions.junit",
      kotlin: [
          coroutines: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines",
          coroutinesAndroid: "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines",
          gradlePlugin: "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
          stdlibJdk8: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin",
          test: "org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
      ],
      leakcanary: "com.squareup.leakcanary:leakcanary-android:$versions.leakcanary",
      material: "com.google.android.material:material:$versions.material",
      moshi: [
          core: "com.squareup.moshi:moshi:$versions.moshi",
          kotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:$versions.moshi"
      ],
      okhttp: [
          core: "com.squareup.okhttp3:okhttp:$versions.okhttp",
          mockwebserver: "com.squareup.okhttp3:mockwebserver:$versions.okhttp"
      ],
      okio: "com.squareup.okio:okio:$versions.okio",
      retrofit: [
          converterMoshi: "com.squareup.retrofit2:converter-moshi:$versions.retrofit",
          core: "com.squareup.retrofit2:retrofit:$versions.retrofit",
          logging: "com.nightlynexus.logging-retrofit:logging:$versions.retrofitLogging"
      ],
      sqldelight: [
          androidDriver: "com.squareup.sqldelight:android-driver:$versions.sqldelight",
          androidPagingExtensions: "com.squareup.sqldelight:android-paging-extensions:$versions.sqldelight",
          gradlePlugin: "com.squareup.sqldelight:gradle-plugin:$versions.sqldelight",
          sqliteDriver: "com.squareup.sqldelight:sqlite-driver:$versions.sqldelight"
      ],
      truth: "com.google.truth:truth:$versions.truth"
  ]

  dependencies {
    classpath deps.androidGradlePlugin
    classpath deps.kotlin.gradlePlugin
    classpath deps.sqldelight.gradlePlugin
  }

  repositories {
    google()
    mavenCentral()
    gradlePluginPortal()
  }
}

allprojects {
  repositories {
    google()
    mavenCentral()
  }

  afterEvaluate { project ->
    project.configurations.all {
      resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.version.endsWith('+')) {
          throw new GradleException(
              "Wildcard dependency forbidden: ${requested.group}:${requested.name}:${requested.version}"
          )
        }
      }
    }
  }
}
